@use "../utils/functions";
@use "../../abstracts/tokens" as *;

//################################################################################################################
//
//    CONFIGS: SPACING
//
//    "configs":
//    "property": 
//         (
//          "css-property": "css-naming",
//          "other-css-property": "other-css-naming"
//         ), 
//    "css-selector": false | string (special CSS selector ex: * + *)             
//    "css-vars-only": false | true (export only the CSS vars)
//    "css-vars": false | true (export the CSS vars as :root)
//    "css-vars-local": false | string (generate the CSS vars as local vars)
//    "dark-mode": false | class | media (generate the classes, media queries and/or classes for dark mode)
//    "responsive": true | false (generate the responsive classes and media queries)
//    "state": hover focus (generate states classes and prefixes for each state)
//
//################################################################################################################


//===============================================================================================================
// GENERAL SPACING VARIABLES
//===============================================================================================================
$spacing-and-sizing-general-spacing: (
  "spacing":(
    "configs": (
      "css-vars-id": spc-,
      "css-vars-only": true
    ),
    "values": (
      map-merge(
				functions.map-flatten-cti($tokens, "size", "base"),
				functions.map-flatten-cti($tokens, "size", "extended")
			)
    )
  )
);

//===============================================================================================================
// GENERAL SPACING VARIABLES NEGATIVE
//===============================================================================================================
$spacing-and-sizing-general-spacing-negative: (
  "spacing-negative":(
    "configs": (
      "css-vars-id": neg-spc-,
      "css-vars-only": true
    ),
    "values": (
      functions.turn-to-negative(
        map-merge(
				  functions.map-flatten-cti($tokens, "size", "base"),
				  functions.map-flatten-cti($tokens, "size", "extended")
			  )
      )
    )
  )
);

//===============================================================================================================
// MARGIN
//===============================================================================================================
$spacing-and-sizing-margin: (
	//------------------------------------------------------------------------------------------
  //  Margin All: [Top | Right | Bottom | Left]
  //------------------------------------------------------------------------------------------
  "margin-all":(
  	"configs": (
    	"property": (
      	"margin": m-
    	),
    	"ext-css-vars": true,
    	"css-vars-id": spc-
    ),
    "values": (
			functions.map-flatten-cti($tokens, "size", "base")
    )
  ),

	//------------------------------------------------------------------------------------------
  //  Margin X/Y : [Right | Left] | [Top | Bottom ]
  //------------------------------------------------------------------------------------------
  "margin-x-y":(
  	"configs": (
    	"property": (
      	("margin-left","margin-right"): m-x-,
      	("margin-top","margin-bottom"): m-y-,
    	),
    	"ext-css-vars": true,
    	"css-vars-id": spc-
    ),
    "values": (
			functions.map-flatten-cti($tokens, "size", "base")
    )
  ),

	//------------------------------------------------------------------------------------------
  //  Margin Individual: [Top] | [Right] | [Bottom] | [Left]
  //------------------------------------------------------------------------------------------
	"margin-individual":(
  	"configs": (
    	"property": (
      	"margin-left": ml-,
      	"margin-right": mr-,
      	"margin-top": mt-,
      	"margin-bottom": mb-,
    	),
    	"ext-css-vars": true,
    	"css-vars-id": spc-
    ),
    "values": (
			functions.map-flatten-cti($tokens, "size", "base")
    )
  )
);

//===============================================================================================================
// MARGIN NEGATIVE
//===============================================================================================================
$spacing-and-sizing-margin-negative: (
	//------------------------------------------------------------------------------------------
  //  Margin All: [Top | Right | Bottom | Left]
  //------------------------------------------------------------------------------------------
  "margin-all-negative":(
  	"configs": (
    	"property": (
      	"margin": -m-
    	),
    	"ext-css-vars": true,
    	"css-vars-id": neg-spc-
    ),
    "values": (
      functions.turn-to-negative(
				functions.map-flatten-cti($tokens, "size", "base")
			)
    )
  ),

	//------------------------------------------------------------------------------------------
  //  Margin X/Y : [Right | Left] | [Top | Bottom ]
  //------------------------------------------------------------------------------------------
  "margin-x-y-negative":(
  	"configs": (
    	"property": (
      	("margin-left","margin-right"): -m-x-,
      	("margin-top","margin-bottom"): -m-y-,
    	),
    	"ext-css-vars": true,
    	"css-vars-id": neg-spc-
    ),
    "values": (
      functions.turn-to-negative(
				functions.map-flatten-cti($tokens, "size", "base")
			)
    )
  ),

	//------------------------------------------------------------------------------------------
  //  Margin Individual: [Top] | [Right] | [Bottom] | [Left]
  //------------------------------------------------------------------------------------------
	"margin-individual-negative":(
  	"configs": (
    	"property": (
      	"margin-left": -ml-,
      	"margin-right": -mr-,
      	"margin-top": -mt-,
      	"margin-bottom": -mb-,
    	),
    	"ext-css-vars": true,
    	"css-vars-id": neg-spc-
    ),
    "values": (
      functions.turn-to-negative(
				functions.map-flatten-cti($tokens, "size", "base")
			)
    )
  )
);

//===============================================================================================================
// PADDING
//===============================================================================================================
$spacing-and-sizing-padding: (
	//------------------------------------------------------------------------------------------
  //  Padding All: [Top | Right | Bottom | Left]
  //------------------------------------------------------------------------------------------
  "padding-all":(
  	"configs": (
    	"property": (
      	"padding": p-
    	),
    	"ext-css-vars": true,
    	"css-vars-id": spc-
    ),
    "values": (
      functions.map-flatten-cti($tokens, "size", "base")
    )
  ),

	//------------------------------------------------------------------------------------------
  //  Padding X/Y : [Right | Left] | [Top | Bottom ]
  //------------------------------------------------------------------------------------------
  "padding-x-y":(
  	"configs": (
    	"property": (
      	("padding-left","padding-right"): p-x-,
      	("padding-top","padding-bottom"): p-y-,
    	),
    	"ext-css-vars": true,
    	"css-vars-id": spc-
    ),
    "values": (
      functions.map-flatten-cti($tokens, "size", "base")
    )
  ),

	//------------------------------------------------------------------------------------------
  //  Padding Individual: [Top] | [Right] | [Bottom] | [Left]
  //------------------------------------------------------------------------------------------
	"padding-individual":(
  	"configs": (
    	"property": (
      	"padding-left": pl-,
      	"padding-right": pr-,
      	"padding-top": pt-,
      	"padding-bottom": pb-,
    	),
    	"ext-css-vars": true,
    	"css-vars-id": spc-
    ),
    "values": (
      functions.map-flatten-cti($tokens, "size", "base")
    )
  )
);
  
//===============================================================================================================
// SPACE BETWEEN
//===============================================================================================================
$spacing-and-sizing-space-between: (
	"space-between":(
    "configs": (
      "property": (
        "margin-left": space-x-,
        "margin-top": space-y-
      ),
      "ext-css-vars": true,
      "css-vars-id": spc-,
      "css-selector": "> * + *",
    ),
    "values": (
      functions.map-flatten-cti($tokens, "size", "base")
    )
  )
);

//################################################################################################################
//
//    CONFIGS: SIZING
//
//################################################################################################################

//===============================================================================================================
// WIDTH
//===============================================================================================================
$spacing-and-sizing-width: (
  "width":(
    "configs": (
      "property": (
        "width": w-
      ),
      "ext-css-vars": true,
      "css-vars-id": spc-,
    ),
    "values": (
      map-merge(
				functions.map-flatten-cti($tokens, "size", "base"),
				functions.map-flatten-cti($tokens, "size", "extended")
			)
    )
  )
);

//===============================================================================================================
// MIN WIDTH
//===============================================================================================================
$spacing-and-sizing-min-width: (
  "min-width":(
    "configs": (
      "property": (
        "width": min-w-
      )
    ),
    "values": (
      "0": 0px,
      "full": 100%,
      "min": min-content,
      "max": max-content,
      "fit": fit-content
    )
  )
);

//===============================================================================================================
// MAX WIDTH
//===============================================================================================================
$spacing-and-sizing-max-width: (
  "max-width":(
    "configs": (
      "property": (
        "width": max-w-
      )
    ),
    "values": (
      "0": 0rem,
      "none": none,
      "xs": 20rem,
      "sm": 24rem,
      "md": 28rem,
      "lg": 32rem,
      "xl": 36rem,
      "2xl": 42rem,
      "3xl": 48rem,
      "4xl": 56rem,
      "5xl": 64rem,
      "6xl": 72rem,
      "7xl": 80rem,
      "full": 100%,
      "min": min-content,
      "max": max-content,
      "fit": fit-content,
      "prose": 65ch,
      "screen-sm": 640px,
      "screen-md": 768px,
      "screen-lg": 1024px,
      "screen-xl": 1280px,
      "screen-2xl": 1536px,
    )
  )
);

//===============================================================================================================
// HEIGHT
//===============================================================================================================
$spacing-and-sizing-height: (
  "height":(
    "configs": (
      "property": (
        "height": h-
      ),
      "ext-css-vars": true,
      "css-vars-id": spc-,
    ),
    "values": (
      map-merge(
				functions.map-flatten-cti($tokens, "size", "base"),
				functions.map-flatten-cti($tokens, "size", "extended")
			)
    )
  )
);

//===============================================================================================================
// MIN HEIGHT
//===============================================================================================================
$spacing-and-sizing-min-height: (
  "min-height":(
    "configs": (
      "property": (
        "min-height": min-h-
      )
    ),
    "values": (
      functions.map-flatten-cti($tokens, "size", "base")
    )
  )
);

//===============================================================================================================
// MAX HEIGHT
//===============================================================================================================
$spacing-and-sizing-max-height: (
  "max-height":(
    "configs": (
      "property": (
        "max-height": max-h-
      ),
    ),
    "values": (
      map-merge(
        (
        "min": min-content,
        "max": max-content,
        "fit": fit-content,
        ),
				functions.map-flatten-cti($tokens, "size", "base")
			)
    )
  )
);